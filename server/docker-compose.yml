services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin_password
      POSTGRES_DB: booking
    ports:
      - '5440:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d booking"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - app-network

  adminer:
    image: adminer:4
    restart: always
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  app:
    build: .
    ports:
      - '3200:3200'
    environment:
      - PORT=3200
      - DB_NAME=booking
      - DB_USER=admin
      - DB_PASS=admin_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - DIALECT=postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge